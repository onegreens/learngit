# For H2
# 配置数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 使用file存储数据
spring.datasource.url = jdbc:mysql://120.25.107.75:5745/yiyuan?noDatetimeStringSync=true&autoReconnect=true&allowMultiQueries=true
# 存储在内存中
#spring.datasource.url = jdbc:h2:mem:~/.h2/spring-boot;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username = root
spring.datasource.password =4d846a38-26cb-496f-b34f-587133e3988b
# 驱动
spring.datasource.driverClassName =com.mysql.jdbc.Driver
# 是否初始化
spring.datasource.initialize=false

# 导入编码
spring.datasource.sql-script-encoding=UTF-8
spring.datasource.continue-on-error=false

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

spring.mvc.view.prefix=/jsp/
spring.mvc.view.suffix=.jsp

mybatis.mapperLocations=classpath*:/mapper/*.xml
mybatis.typeAliasesPackage=com.cl.learnSpring.userManage.dao
mybatis.config-locations=classpath*:/mybatis-config.xml

